<?php
function reg_checkout_entity_insert($entity) {
  global $user;
  if ($entity->type == 'laborday_retreat') {
    //display all the values in the entity in a dpm, you can expand the dpm to see all the field values and use them like this
    //dpm($entity);
    if ($entity->field_full_or_part_time[LANGUAGE_NONE]['0']['value'] == 0) {
      //it's a part time registration
      //loop through which days
      $night_counter = '';
      $breakfast_meal_counter = '';
      $lunch_meal_counter = '';
      $dinner_meal_counter = '';
      $no_meal_counter = '';

      foreach ($entity->field_price_tier[LANGUAGE_NONE] as $key => $value) {
        //see if they have the night checked
        $value = strtolower($value['value']);
        // get value of tier 
        $tier = $value;
      }
      if ($tier == 1){
        //add one night product to cart
        $product_id = get_tier_product_id($entity->field_age_at_ldr[LANGUAGE_NONE]['0']['value'], 1);
        //dpm($product_id);
        add_product_to_cart($product_id, 1);
      }
      else if ($tier == 2) {
        //add two night product to cart
        $product_id = get_tier_product_id($entity->field_age_at_ldr[LANGUAGE_NONE]['0']['value'], 2);
        //dpm($product_id);
        add_product_to_cart($product_id, 1);
      }
      else if ($tier == 3) {
        $product_id = get_tier_product_id($entity->field_age_at_ldr[LANGUAGE_NONE]['0']['value'], 3);
        //dpm($product_id);
        add_product_to_cart($product_id, 1);
      }
      else if ($tier == 4) {
        $product_id = get_tier_product_id($entity->field_age_at_ldr[LANGUAGE_NONE]['0']['value'], 4);
        //dpm($product_id);
        add_product_to_cart($product_id, 1);
      }
    }
    else {
      //it's a full time registration
      $product_id = get_full_time_product_id($entity->field_age_at_ldr[LANGUAGE_NONE]['0']['value']);
      add_product_to_cart($product_id, 1);
    }
    drupal_set_message("Registration for <b>".$entity->field_first_name[LANGUAGE_NONE]['0']['value']."</b> has been successfully submitted.");
    drupal_set_message("Fill out the form again, to register another person, or head to the <big><b><a href='/cart'>cart</a></b></big> to get payment instructions.<br>You will not be considered as registered and your room will not be assigned until payment is received.");
  }
}
function day_use_fee_to_cart($age, $no_meal_counter){
  if($age <= 2 ) {
  }
  else if($age > 2 && $age <= 9 ) {
    $no_meal_id = 27;
    add_product_to_cart($no_meal_id, $no_meal_counter);
  }
  else if($age > 9 && $age <= 15 ) {
    $no_meal_id = 28;
    add_product_to_cart($no_meal_id, $no_meal_counter);
  }
  else {
    $no_meal_id = 29;
    add_product_to_cart($no_meal_id, $no_meal_counter);
  }
}
function meals_day_use_fee_to_cart($age, $no_meal_counter){
  if($age < 2 ) {
  }
  else if($age > 2 && $age <= 9 ) {
    $no_meal_id = 24;
    add_product_to_cart($no_meal_id, $no_meal_counter);
  }
  else if($age > 9 && $age <= 15 ) {
    $no_meal_id = 25;
    add_product_to_cart($no_meal_id, $no_meal_counter);
  }
  else {
    $no_meal_id = 26;
    add_product_to_cart($no_meal_id, $no_meal_counter);
  }
}

function add_product_to_cart($product_id, $quantity) {
  global $user;
  //load up the product id
  $product = commerce_product_load($product_id);
  //create a line item with the product and the quantity
  $line_item = commerce_product_line_item_new($product, $quantity, 0);
  // Add to current user's cart: if the user is not logged in ($user->uid: 0) Drupal Commerce manages the $_SESSION
  commerce_cart_product_add($user->uid, $line_item);
}
function get_full_time_product_id($age) {
  if ($age <= 2) {
    $product_id = 6;
  }
  if ($age <= 5 && $age > 2) {
    $product_id = 5;
  }
  if ($age <= 9 && $age > 5) {
    $product_id = 4;
  }
  if ($age <= 15 && $age > 9) {
    $product_id = 3;
  }
//  if ($age <= 15 && $age > 12) {
//    $product_id = 2;
//  }
  if ($age > 15) {
    $product_id = 1;
  }
  return $product_id;
}

function get_full_time_os_product_id($age) {
  if ($age <= 2) {
    $product_id = 6;
  }
  if ($age <= 5 && $age > 2) {
    $product_id = 30;
  }
  if ($age <= 9 && $age > 5) {
    $product_id = 35;
  }
 if ($age <= 15 && $age > 9) {
    $product_id = 31;
  }
 if ($age > 15) {
    $product_id = 32;
  }
  return $product_id;
}


function get_part_time_product_id($age, $day_count) {
  if ($age <= 9 && $age > 2 && $day_count == 1) {
    $product_id = 23;
  }
  if ( $age > 9 && $day_count == 1) {
    $product_id = 22;
  }
  if ($age <= 9 && $age > 2 && $day_count == 2) {
    $product_id = 14;
  }
  if ($age <= 9 && $age > 5 && $day_count == 2) {
    $product_id = 33;
  }
  if ($age <= 15 && $age > 9 && $day_count == 2) {
    $product_id = 15;
  }
  if ($age > 15 && $day_count == 2) {
    $product_id = 16;
  }

  return $product_id;
}

function get_tier_product_id($age, $tier) {
  //tier 1
  if ($age <= 2 && $tier == 1) {
    $product_id = 6;
  }
  if ($age > 2 && $age <= 5 && $tier == 1) {
    $product_id = 5;
  }
  if ($age > 5 && $age <= 9 && $tier == 1) {
    $product_id = 4;
  }
  if ($age > 9 && $age <= 15 && $tier == 1) {
    $product_id = 3;
  }
  if ($age > 15 && $tier == 1) {
    $product_id = 1;
  }
  //tier 2
  if ($age <= 2 && $tier == 2) {
    $product_id = 6;
  }
  if ($age > 2 && $age <= 5 && $tier == 2) {
    $product_id = 14;
  }
  if ($age > 5 && $age <= 9 && $tier == 2) {
    $product_id = 33;
  }
  if ($age > 9 && $age <= 15 && $tier == 2) {
    $product_id = 15;
  }
  if ($age > 15 && $tier == 2) {
    $product_id = 16;
  }
  //tier 3
  if ($age <= 2 && $tier == 3) {
    $product_id = 6;
  }
  if ($age > 2 && $age <= 5 && $tier == 3) {
    $product_id = 24;
  }
  if ($age > 5 && $age <= 9 && $tier == 3) {
    $product_id = 25;
  }
  if ($age > 9 && $age <= 15 && $tier == 3) {
    $product_id = 26;
  }
  if ($age > 15 && $tier == 3) {
    $product_id = 36;
  }
  //tier 4
  if ($age <= 2 && $tier == 4) {
    $product_id = 6;
  }
  if ($age > 2 && $age <= 5 && $tier == 4) {
    $product_id = 38;
  }
  if ($age > 5 && $age <= 9 && $tier == 4) {
    $product_id = 39;
  }
  if ($age > 9 && $age <= 15 && $tier == 4) {
    $product_id = 40;
  }
  if ($age > 15 && $tier == 4) {
    $product_id = 41;
  }
  return $product_id;
}


function reg_checkout_form_validate(&$form, &$form_state){
  //dsm($form);
  // check for people trying to buy all the days and individual days
  if(in_array('AllDays', $form['field_which_days'][LANGUAGE_NONE]['#value']) && count($form['field_which_days'][LANGUAGE_NONE]['#value']) > 1) {
    form_set_error('form', "If you're coming for all the days, you cannot select individual days.");
  }

  //foreach days checked, see if they're coming that night
  foreach($form['field_which_days'][LANGUAGE_NONE]['#value'] as $value){
    $day_count++;
    //if it's not monday, check and see if they told us if they're coming for that night
    if ($value != 'Monday' && $value != 'AllDays') {
      $field_name = "field_".strtolower($value)."_night";
      //if they didn't tell us, throw an error
      if( $form[$field_name]['und']['#value'] === NULL && $value != 'Monday' ) {
        form_set_error('form', "You need to tell us if you're coming for $value night.");
      } else if( $form[$field_name]['und']['#value'] == 1 ) {
      // if they're not coming for the night, that's ok
      }
      else {
        $night_count++;
      }
    }
  }
  if ($night_count == 1) {
    form_set_error('form', "There is no option to come for one night, please select two nights, or just plan on coming for the day. If you have any questions, please contact the registrar.");
  }
}
function reg_checkout_form_alter(&$form, &$form_state, $form_id){

  //this would hide the update cart button and disable the quantity field
  if ($form_id === 'views_form_commerce_cart_form_default') {
    //$form['actions']['submit']['#access'] = FALSE;
    foreach($form['edit_quantity'] as &$quantity) {
      if (is_array($quantity)) {
        //$quantity['#disabled'] = TRUE;
      }
    }
  }
  // target a single form
  if($form_id == "registration_form"){
    //do custom validation
    $form['#validate'][] = 'reg_checkout_form_validate';
  }
}
function reg_checkout_element_info_alter(&$type) {
  $type['radios']['#process'][] = '_reg_checkout_remove_radio_na';
}

function _reg_checkout_remove_radio_na($element) {
  unset($element['#options']['_none']);
  unset($element['_none']);
  return $element;
}
